#!/bin/bash

# set -o xtrace

function usage_help() {
    echo -e "\e[1mUsage:\e[0m ${0##*/} [options]"
    echo
    echo "Wrapper script to launch clusters on Amazon EMR."
    echo
    echo -e "    \e[1m--name\e[0m <cluster name>"
    echo
    echo -e "    \e[1m--cluster-type\e[0m <SPARK|HADOOP|HBASE|PRESTO>"
    echo
    echo -e "    \e[1m--instance-groups\e[0m <file.json|json literal>"
    echo
    echo -e "    \e[1m--conf\e[0m <cluster-conf-file.json>"
    echo
    echo -e "    \e[1m--steps\e[0m <steps-conf-file.json>"
}

declare COMMON="${0%/*}/common"
source "$COMMON/conf"
source "$COMMON/emr"

# parse options
declare -A opts
while [[ $# -ge 1 ]]; do
    case $1 in
	--name)
	    opts[name]="$2" && shift 2
	    ;;
	--cluster-type)
	    opts[cluster]="$2" && shift 2
	    ;;
	--instance-groups)
	    opts[instances]="$2" && shift 2
	    ;;
	--conf)
	    opts[conf]="$2" && shift 2
	    ;;
	--steps)
	    opts[steps]="$2" && shift 2
	    ;;
	--help)
	    usage_help
	    exit
	    ;;
	*)
	    echo "${0##*/}: unknown option in command line: $1"
	    usage_help
	    exit
    esac
done

# collect optional flags
declare -a optargs

for flag in cluster instances conf steps; do
    # process only if flags are set
    [[ -n ${opts[${flag}]} ]] || continue
    case $flag in
	cluster)
	    optargs+=(--applications $(eval echo Name={${!opts[cluster]}}))
	    ;;
	instances)
	    optargs+=(--instance-groups file://${opts[instances]})
	    ;;
	conf)
	    optargs+=(--configurations file://${opts[conf]})
	    ;;
	steps)
	    optargs+=(--steps file://${opts[steps]})
	    ;;
    esac
done

# defaults
[[ -z ${opts[cluster]} ]] && opts[cluster]=SPARK
[[ -z ${opts[instances]} ]] && \
    optargs+=(--instance-type m4.large --instance-count 3)
# conf and steps are optional

aws emr create-cluster --name ${opts[name]} \
    --release-label $EMRv \
    --use-default-roles \
    --log-uri s3://$LOG_BUCKET/ \
    --ec2-attributes $SUBNET,$KEYS \
    ${optargs[@]} \
    --bootstrap-action Path="s3://${BUCKET}/conf/bootstrap.sh"


# # simple
#     --instance-type m4.large \
#     --instance-count 3 \
